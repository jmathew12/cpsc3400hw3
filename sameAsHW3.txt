# James Mathew
# hw3.py
# cpsc3400

import sys

def create(nodes):
    for x in range(1, len(nodes)):
        if x % 2 == 1:
            if nodes[x].isalpha():
                if nodes[x+1].isalpha():
                    yield [nodes[x], nodes[x+1]]
                else:
                    yield [nodes[x], int(nodes[x+1])]
            elif (nodes[x]) != '\n':
                if nodes[x+1].isalpha():
                    yield [int(nodes[x]), nodes[x+1]]
                else:
                    yield [int(nodes[x]), int(nodes[x+1])]

def createList(connect, attached, value):
    for x in connect:
        if x[0] == value:
            attached.append(x[1])
            # print('index ', connect.index(x))
            print(connect)
            connect.pop(connect.index(x))
            print(connect)
            createList(connect, attached, x[1])

inputs = sys.argv
# print(inputs[1])


with open(inputs[1], 'r') as input:
    nodes = []
    s = ''
    for line in input:
        for x in line:
            if s != '' and ',' == x or '\n' == x:
                nodes.append(s)
                s = ''
            else:
                s = s+x
    if s != '':
        nodes.append(s)     
print(nodes)
length = nodes[0]
print(length)
connect = []
for x in create(nodes):
    connect.append(x)
names = []
for x in connect:
    if str(x[0]).isalpha():
        names.append(x[0])
attached = []
# print(connect)
for x in names:
    print('first round **************')
    attached.append(x)
    createList(connect, attached, x)
    print(attached)
    attached = []
